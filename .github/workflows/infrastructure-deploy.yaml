name: Terraform Infrastructure CI/CD

on:
  push:
    branches: [terraform]
  pull_request:
    branches: [terraform]
  workflow_dispatch:

env:
  DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure

    steps:
    - uses: actions/checkout@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Import existing resources
      run: |
        terraform import module.container_registry.digitalocean_container_registry.registry socks-shop-registry || echo "Container registry import failed, might not exist yet"
        terraform import module.firewall.digitalocean_firewall.main socks-shop-firewall || echo "Firewall import failed, might not exist yet"
        terraform import module.vpc.digitalocean_vpc.main socks-shop-vpc || echo "VPC import failed, might not exist yet"
    - name: Terraform Refresh
      run: terraform refresh -var "do_token=${DIGITALOCEAN_TOKEN}" -no-color

    - name: Terraform Plan
      run: terraform plan -var "do_token=${DIGITALOCEAN_TOKEN}" -no-color
      continue-on-error: true

    - name: Terraform Apply
      if: github.ref == 'refs/heads/terraform' && github.event_name == 'push'
      run: terraform apply -var "do_token=${DIGITALOCEAN_TOKEN}" -auto-approve || echo "Terraform apply failed, resources might already exist"




    - name: Terraform Output
      if: github.ref == 'refs/heads/terraform' && github.event_name == 'push'
      run: |
        echo "KUBERNETES_HOST=$(terraform output -raw kubernetes_host)" >> $GITHUB_OUTPUT
        echo "KUBERNETES_TOKEN=$(terraform output -raw kubernetes_token)" >> $GITHUB_OUTPUT
      id: terraform_output

    - name: Save Kubernetes Credentials
      if: github.ref == 'refs/heads/terraform' && github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: kubernetes-credentials
        path: |
          ${{ steps.terraform_output.outputs.KUBERNETES_HOST }}
          ${{ steps.terraform_output.outputs.KUBERNETES_TOKEN }}
        
    - name: Notify Slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "Terraform Infrastructure CI/CD completed: ${{ job.status }}"
          }
      env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK